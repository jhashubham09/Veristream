{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file://D%3A/veristream/pages/api/analyze.js"],"sourcesContent":["// pages/api/analyze.js\r\nimport { spawn } from \"child_process\";\r\nimport path from \"path\";\r\nimport fs from \"fs\";\r\n\r\nexport default async function handler(req, res) {\r\n    if (req.method !== \"POST\") {\r\n        return res.status(405).json({ error: \"Method not allowed.\" });\r\n    }\r\n\r\n    try {\r\n        const { transcript } = req.body;\r\n\r\n        if (!transcript) {\r\n            return res.status(400).json({ error: \"No transcript provided.\" });\r\n        }\r\n\r\n        // Clean and split the transcript into lines\r\n        const lines = transcript\r\n            .split(/[.!?]+/)\r\n            .map(line => line.trim())\r\n            .filter(line => line.length > 0);\r\n\r\n        const scriptPath = path.join(process.cwd(), \"model\", \"model_handler.py\");\r\n        const inputPath = path.join(process.cwd(), \"model\", \"input.txt\");\r\n        const resultPath = path.join(process.cwd(), \"model\", \"result.json\");\r\n\r\n        // Write the lines to input file\r\n        fs.writeFileSync(inputPath, lines.join('\\n'), \"utf-8\");\r\n\r\n        // Run the Python model handler script\r\n        await new Promise((resolve, reject) => {\r\n            const process = spawn(\"python\", [scriptPath, inputPath, resultPath]);\r\n\r\n            let errorOutput = '';\r\n\r\n            process.stderr.on('data', (data) => {\r\n                errorOutput += data.toString();\r\n            });\r\n\r\n            process.on(\"close\", (code) => {\r\n                if (code !== 0) {\r\n                    return reject(new Error(`Model analysis failed: ${errorOutput}`));\r\n                }\r\n                resolve();\r\n            });\r\n        });\r\n\r\n        // Read and parse the results\r\n        const results = JSON.parse(fs.readFileSync(resultPath, \"utf-8\"));\r\n\r\n        // Transform results into the expected format\r\n        const analysisResults = {\r\n            lines: results.map(result => ({\r\n                text: result.text,\r\n                isFake: result.label === \"False\",\r\n                confidence: Math.max(...result.probabilities) * 100\r\n            }))\r\n        };\r\n\r\n        return res.status(200).json(analysisResults);\r\n    } catch (error) {\r\n        console.error(\"Error during analysis:\", error);\r\n        return res.status(500).json({ error: error.message });\r\n    }\r\n}"],"names":[],"mappings":"AAAA,uBAAuB;;;;AACvB;AACA;AACA;;;;AAEe,eAAe,QAAQ,GAAG,EAAE,GAAG;IAC1C,IAAI,IAAI,MAAM,KAAK,QAAQ;QACvB,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;QAAsB;IAC/D;IAEA,IAAI;QACA,MAAM,EAAE,UAAU,EAAE,GAAG,IAAI,IAAI;QAE/B,IAAI,CAAC,YAAY;YACb,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,OAAO;YAA0B;QACnE;QAEA,4CAA4C;QAC5C,MAAM,QAAQ,WACT,KAAK,CAAC,UACN,GAAG,CAAC,CAAA,OAAQ,KAAK,IAAI,IACrB,MAAM,CAAC,CAAA,OAAQ,KAAK,MAAM,GAAG;QAElC,MAAM,aAAa,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,SAAS;QACrD,MAAM,YAAY,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,SAAS;QACpD,MAAM,aAAa,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,SAAS;QAErD,gCAAgC;QAChC,6FAAA,CAAA,UAAE,CAAC,aAAa,CAAC,WAAW,MAAM,IAAI,CAAC,OAAO;QAE9C,sCAAsC;QACtC,MAAM,IAAI,QAAQ,CAAC,SAAS;YACxB,MAAM,WAAU,CAAA,GAAA,mHAAA,CAAA,QAAK,AAAD,EAAE,UAAU;gBAAC;gBAAY;gBAAW;aAAW;YAEnE,IAAI,cAAc;YAElB,SAAQ,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC;gBACvB,eAAe,KAAK,QAAQ;YAChC;YAEA,SAAQ,EAAE,CAAC,SAAS,CAAC;gBACjB,IAAI,SAAS,GAAG;oBACZ,OAAO,OAAO,IAAI,MAAM,CAAC,uBAAuB,EAAE,aAAa;gBACnE;gBACA;YACJ;QACJ;QAEA,6BAA6B;QAC7B,MAAM,UAAU,KAAK,KAAK,CAAC,6FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,YAAY;QAEvD,6CAA6C;QAC7C,MAAM,kBAAkB;YACpB,OAAO,QAAQ,GAAG,CAAC,CAAA,SAAU,CAAC;oBAC1B,MAAM,OAAO,IAAI;oBACjB,QAAQ,OAAO,KAAK,KAAK;oBACzB,YAAY,KAAK,GAAG,IAAI,OAAO,aAAa,IAAI;gBACpD,CAAC;QACL;QAEA,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;IAChC,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO,MAAM,OAAO;QAAC;IACvD;AACJ"}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file://D%3A/veristream/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n  } else if (process.env.TURBOPACK) {\n    module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n  } else {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1CH,OAAOC,OAAO,GAAGC,QAAQ;IAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACM,SAAS,EAAE;;IAIlC;AACF","ignoreList":[0]}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["file://D%3A/veristream/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0]}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":["file://D%3A/veristream/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0]}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":["file://D%3A/veristream/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;yMAGzBD,QAAAA,EAAMC,kHAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,kHAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0]}},
    {"offset": {"line": 214, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}