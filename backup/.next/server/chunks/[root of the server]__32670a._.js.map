{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file://D%3A/hackathon%20projects/veristream/utils/videoProcessing.js"],"sourcesContent":["// utils/videoProcessing.js\r\n// utils/videoProcessing.js\r\nimport fs from 'fs';\r\nimport path from 'path';\r\nimport ytdl from 'ytdl-core';\r\nimport { spawn } from 'child_process';\r\n\r\n// Helper function to validate YouTube URL\r\nfunction getYoutubeVideoId(url) {\r\n    try {\r\n        const videoId = ytdl.getVideoID(url);\r\n        return videoId;\r\n    } catch (error) {\r\n        console.error('Invalid YouTube URL:', error);\r\n        return null;\r\n    }\r\n}\r\n\r\nexport async function downloadVideo(videoUrl, outputPath) {\r\n    try {\r\n        console.log('Validating video URL:', videoUrl);\r\n\r\n        // Validate YouTube URL first\r\n        const videoId = getYoutubeVideoId(videoUrl);\r\n        if (!videoId) {\r\n            throw new Error('Invalid YouTube URL format');\r\n        }\r\n\r\n        console.log('Initiating video download. Video ID:', videoId);\r\n\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                // Get video info with extended timeout\r\n                const videoInfo = await ytdl.getInfo(videoId, {\r\n                    requestOptions: {\r\n                        timeout: 30000\r\n                    }\r\n                });\r\n\r\n                console.log('Video info retrieved successfully');\r\n\r\n                // Select the best format that includes both audio and video\r\n                let format = ytdl.chooseFormat(videoInfo.formats, {\r\n                    quality: '18', // 360p with audio\r\n                    filter: format => format.container === 'mp4' && format.hasAudio && format.hasVideo\r\n                });\r\n\r\n                if (!format) {\r\n                    // Fallback to any MP4 format if the preferred format isn't available\r\n                    format = ytdl.chooseFormat(videoInfo.formats, {\r\n                        filter: format => format.container === 'mp4'\r\n                    });\r\n                }\r\n\r\n                if (!format) {\r\n                    throw new Error('No suitable video format found');\r\n                }\r\n\r\n                console.log('Selected format:', format.qualityLabel);\r\n\r\n                // Create write stream\r\n                const writeStream = fs.createWriteStream(outputPath);\r\n\r\n                // Download with the selected format\r\n                const stream = ytdl.downloadFromInfo(videoInfo, { format });\r\n\r\n                let downloadedBytes = 0;\r\n                const totalBytes = format.contentLength;\r\n\r\n                stream.on('data', (chunk) => {\r\n                    downloadedBytes += chunk.length;\r\n                    if (totalBytes) {\r\n                        const progress = (downloadedBytes / totalBytes * 100).toFixed(2);\r\n                        console.log(`Download progress: ${progress}%`);\r\n                    }\r\n                });\r\n\r\n                writeStream.on('finish', () => {\r\n                    console.log('Download completed');\r\n                    resolve(true);\r\n                });\r\n\r\n                stream.on('error', (error) => {\r\n                    console.error('Download stream error:', error);\r\n                    reject(new Error(`Download stream error: ${error.message}`));\r\n                });\r\n\r\n                writeStream.on('error', (error) => {\r\n                    console.error('Write stream error:', error);\r\n                    reject(new Error(`Write stream error: ${error.message}`));\r\n                });\r\n\r\n                // Pipe the download to the file\r\n                stream.pipe(writeStream);\r\n\r\n            } catch (error) {\r\n                console.error('Error in download process:', error);\r\n                reject(error);\r\n            }\r\n        });\r\n    } catch (error) {\r\n        console.error('Error in downloadVideo:', error);\r\n        throw new Error(`Failed to download video: ${error.message}`);\r\n    }\r\n}\r\n\r\n// Keep the existing transcribeVideo and cleanupTempFiles functions...\r\n\r\nexport async function transcribeVideo(videoPath) {\r\n    console.log('Starting transcription for video:', videoPath);\r\n\r\n    // Verify the video file exists and has content\r\n    if (!fs.existsSync(videoPath)) {\r\n        throw new Error('Video file not found');\r\n    }\r\n\r\n    const stats = fs.statSync(videoPath);\r\n    if (stats.size === 0) {\r\n        throw new Error('Video file is empty');\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        const pythonScript = path.join(process.cwd(), 'transcribe_video.py');\r\n\r\n        // Use python3 explicitly and add error checking\r\n        const pythonProcess = spawn('python', [pythonScript, videoPath], {\r\n            env: {\r\n                ...process.env,\r\n                PYTHONIOENCODING: 'utf-8',\r\n                PYTHONUNBUFFERED: '1'\r\n            }\r\n        });\r\n\r\n        let transcriptData = '';\r\n        let errorData = '';\r\n\r\n        pythonProcess.stdout.on('data', (data) => {\r\n            const output = data.toString();\r\n            console.log('Transcription output:', output);\r\n            transcriptData += output;\r\n        });\r\n\r\n        pythonProcess.stderr.on('data', (data) => {\r\n            const error = data.toString();\r\n            console.error('Transcription error:', error);\r\n            errorData += error;\r\n        });\r\n\r\n        pythonProcess.on('error', (error) => {\r\n            console.error('Failed to start Python process:', error);\r\n            reject(error);\r\n        });\r\n\r\n        pythonProcess.on('close', (code) => {\r\n            console.log(`Python process exited with code: ${code}`);\r\n\r\n            if (code === 0 && transcriptData.trim()) {\r\n                resolve(transcriptData.trim());\r\n            } else {\r\n                reject(new Error(`Transcription failed: ${errorData || 'No transcript generated'}`));\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n// Helper function to clean up temp files\r\nexport function cleanupTempFiles(filePath) {\r\n    try {\r\n        if (fs.existsSync(filePath)) {\r\n            fs.unlinkSync(filePath);\r\n            console.log('Cleaned up temp file:', filePath);\r\n        }\r\n    } catch (error) {\r\n        console.error('Error cleaning up temp file:', error);\r\n    }\r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":["file://D%3A/hackathon%20projects/veristream/pages/api/transcribe.js"],"sourcesContent":["// pages/api/transcribe.js\r\nimport { downloadVideo, transcribeVideo, cleanupTempFiles } from '../../utils/videoProcessing';\r\nimport path from 'path';\r\nimport fs from 'fs';\r\n\r\nexport const config = {\r\n    api: {\r\n        bodyParser: {\r\n            sizeLimit: '500mb'\r\n        },\r\n        responseLimit: '500mb'\r\n    }\r\n};\r\n\r\nexport default async function handler(req, res) {\r\n    if (req.method !== \"POST\") {\r\n        return res.status(405).json({ error: \"Method not allowed\" });\r\n    }\r\n\r\n    let tempVideoPath = null;\r\n\r\n    try {\r\n        const { videoUrl } = req.body;\r\n\r\n        if (!videoUrl) {\r\n            return res.status(400).json({ error: \"No video URL provided\" });\r\n        }\r\n\r\n        console.log('Processing request for video URL:', videoUrl);\r\n\r\n        // Ensure temp directory exists\r\n        const tempDir = path.join(process.cwd(), 'temp');\r\n        if (!fs.existsSync(tempDir)) {\r\n            fs.mkdirSync(tempDir, { recursive: true });\r\n        }\r\n\r\n        // Create unique filename\r\n        const tempFileName = `video-${Date.now()}.mp4`;\r\n        tempVideoPath = path.join(tempDir, tempFileName);\r\n\r\n        console.log('Starting video download to:', tempVideoPath);\r\n\r\n        try {\r\n            await downloadVideo(videoUrl, tempVideoPath);\r\n        } catch (downloadError) {\r\n            console.error('Download error:', downloadError);\r\n            throw new Error(`Video download failed: ${downloadError.message}`);\r\n        }\r\n\r\n        // Verify the downloaded file\r\n        if (!fs.existsSync(tempVideoPath)) {\r\n            throw new Error('Video file was not created');\r\n        }\r\n\r\n        const fileStats = fs.statSync(tempVideoPath);\r\n        if (fileStats.size === 0) {\r\n            throw new Error('Downloaded video file is empty');\r\n        }\r\n\r\n        console.log('Video downloaded successfully, starting transcription...');\r\n\r\n        try {\r\n            const transcript = await transcribeVideo(tempVideoPath);\r\n\r\n            if (!transcript || typeof transcript !== 'string' || transcript.trim().length === 0) {\r\n                throw new Error('No valid transcript generated');\r\n            }\r\n\r\n            console.log('Transcription completed successfully');\r\n\r\n            // Clean up the temp file\r\n            cleanupTempFiles(tempVideoPath);\r\n\r\n            return res.status(200).json({ transcript });\r\n        } catch (transcribeError) {\r\n            throw new Error(`Transcription failed: ${transcribeError.message}`);\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error('Error in transcribe API:', error);\r\n\r\n        // Clean up temp file on error\r\n        if (tempVideoPath && fs.existsSync(tempVideoPath)) {\r\n            cleanupTempFiles(tempVideoPath);\r\n        }\r\n\r\n        return res.status(500).json({\r\n            error: error.message,\r\n            details: process.env.NODE_ENV === 'development' ? error.stack : undefined\r\n        });\r\n    }\r\n}"],"names":[],"mappings":"AAAA,0BAA0B;;;;;AAC1B;AACA;AACA;;;;AAEO,MAAM,SAAS;IAClB,KAAK;QACD,YAAY;YACR,WAAW;QACf;QACA,eAAe;IACnB;AACJ;AAEe,eAAe,QAAQ,GAAG,EAAE,GAAG;IAC1C,IAAI,IAAI,MAAM,KAAK,QAAQ;QACvB,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;QAAqB;IAC9D;IAEA,IAAI,gBAAgB;IAEpB,IAAI;QACA,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,IAAI;QAE7B,IAAI,CAAC,UAAU;YACX,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,OAAO;YAAwB;QACjE;QAEA,QAAQ,GAAG,CAAC,qCAAqC;QAEjD,+BAA+B;QAC/B,MAAM,UAAU,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;QACzC,IAAI,CAAC,6FAAA,CAAA,UAAE,CAAC,UAAU,CAAC,UAAU;YACzB,6FAAA,CAAA,UAAE,CAAC,SAAS,CAAC,SAAS;gBAAE,WAAW;YAAK;QAC5C;QAEA,yBAAyB;QACzB,MAAM,eAAe,CAAC,MAAM,EAAE,KAAK,GAAG,GAAG,IAAI,CAAC;QAC9C,gBAAgB,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,SAAS;QAEnC,QAAQ,GAAG,CAAC,+BAA+B;QAE3C,IAAI;YACA,MAAM,CAAA,GAAA,iHAAA,CAAA,gBAAa,AAAD,EAAE,UAAU;QAClC,EAAE,OAAO,eAAe;YACpB,QAAQ,KAAK,CAAC,mBAAmB;YACjC,MAAM,IAAI,MAAM,CAAC,uBAAuB,EAAE,cAAc,OAAO,EAAE;QACrE;QAEA,6BAA6B;QAC7B,IAAI,CAAC,6FAAA,CAAA,UAAE,CAAC,UAAU,CAAC,gBAAgB;YAC/B,MAAM,IAAI,MAAM;QACpB;QAEA,MAAM,YAAY,6FAAA,CAAA,UAAE,CAAC,QAAQ,CAAC;QAC9B,IAAI,UAAU,IAAI,KAAK,GAAG;YACtB,MAAM,IAAI,MAAM;QACpB;QAEA,QAAQ,GAAG,CAAC;QAEZ,IAAI;YACA,MAAM,aAAa,MAAM,CAAA,GAAA,iHAAA,CAAA,kBAAe,AAAD,EAAE;YAEzC,IAAI,CAAC,cAAc,OAAO,eAAe,YAAY,WAAW,IAAI,GAAG,MAAM,KAAK,GAAG;gBACjF,MAAM,IAAI,MAAM;YACpB;YAEA,QAAQ,GAAG,CAAC;YAEZ,yBAAyB;YACzB,CAAA,GAAA,iHAAA,CAAA,mBAAgB,AAAD,EAAE;YAEjB,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE;YAAW;QAC7C,EAAE,OAAO,iBAAiB;YACtB,MAAM,IAAI,MAAM,CAAC,sBAAsB,EAAE,gBAAgB,OAAO,EAAE;QACtE;IAEJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,4BAA4B;QAE1C,8BAA8B;QAC9B,IAAI,iBAAiB,6FAAA,CAAA,UAAE,CAAC,UAAU,CAAC,gBAAgB;YAC/C,CAAA,GAAA,iHAAA,CAAA,mBAAgB,AAAD,EAAE;QACrB;QAEA,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YACxB,OAAO,MAAM,OAAO;YACpB,SAAS,uCAAyC,MAAM,KAAK;QACjE;IACJ;AACJ"}},
    {"offset": {"line": 295, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":["file://D%3A/hackathon%20projects/veristream/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n  } else if (process.env.TURBOPACK) {\n    module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n  } else {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1CH,OAAOC,OAAO,GAAGC,QAAQ;IAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACM,SAAS,EAAE;;IAIlC;AACF","ignoreList":[0]}},
    {"offset": {"line": 309, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 315, "column": 0}, "map": {"version":3,"sources":["file://D%3A/hackathon%20projects/veristream/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0]}},
    {"offset": {"line": 338, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 344, "column": 0}, "map": {"version":3,"sources":["file://D%3A/hackathon%20projects/veristream/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0]}},
    {"offset": {"line": 371, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 377, "column": 0}, "map": {"version":3,"sources":["file://D%3A/hackathon%20projects/veristream/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;yMAGzBD,QAAAA,EAAMC,qHAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,qHAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0]}},
    {"offset": {"line": 404, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}